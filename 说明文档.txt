Homework6控制台程序是自行尝试了多种方法实现对baidu网站首页抓取html

任务作业1：对老师原有Ruanmou.Crawler解决方案做了类库扩展分离:
1.1 将原有Utility放入类库Homework6.Common中并修改名称空间名,并增设接口类Homework6.IDAL,Homework6.IService 实现类库Homework6.DAL,Homework6.Service 及实体类库Homework6.Model
1.2 将原有DBInit.cs移入到Homework.DAL类库中，并增设参数做了通用化处理

第6期任务需要完成如下：
1、增加多线程实现商品数据抓取的开始、暂停、恢复等功能 （已完成）
解决方法：在Constant公用类中增设ManualResetEvent MRE 在CategorySearch、CommoditySearch类Crawler方法循环体内增加Constant.MRE.WaitOne();
2、某个抓取出异常了，能够取消其他线程任务 
解决方法：在Constant公用类中增设CancellationTokenSource CTS 在btnStop_Click调用Constant.CTS.Cancel();  
		  在CategorySearch、CommoditySearch类Crawler方法及CrawlerCenter类CrawlerCommodity方法循环体内增加Constant.CTS.IsCancellationRequested

后序额外展示待扩展任务：
1、想引入Unity框架面向AOP编程如日志处理、异常捕获等(目前此类库还未启用)。
2、UI增加DataGridView控件用来显示已采集列表目录条数 （后期扩展） 
3、有时间再来扩展淘宝产品抓取 （后期扩展） 

第7期任务需要完成如下：(切记命名空间与引入框架命名空间名称尽量避免有包含关系)
1  使用Ruanmou.LuceneProject完成索引建立，如果有异常日志等，自己尝试解决，参照Lucene使用说明.txt；

2  建立winform程序，将lucene索引建立的功能包含进去，提供索引创建的开始和停止功能(开始时直接清理原有的，不考虑停止后恢复)
   优化线程任务的分配，能自由配置线程数量，合理分配线程任务,每个线程的任务量差不多；

3  试着用Redis的List结构做一个异步队列，在winform程序建立完索引(合并)之后，允许一个按钮可用，点击后启动一个线程来等候redis队列的任务，负责更新索引；
   然后提供一个入口可以模拟增加测试数据(到jd_commodity_030表)，同时添加队列任务，然后由前面线程自动完成，体会下lucene索引更新机制以及异步队列的使用(选修)

Homework6.Redis.Service 用访问Redis服务主要参考老师代码
Homework6.Lucene.Service 用实现Lucene相关服务操作参考老师代码
Homework6.UI 增加Lucene.JD文件夹详见代码

后期还需要改进对频繁释放IndexWriter对象影响性能问题。
实现方案1：确保IndexWriter长时开启，直至所有索引插入完成再完毕
实现方案2：增加缓存List列表。先将Redis列表写入缓存，等缓存List写满后，再批量插入索引。

上述方案，哪种性能比会更好。是否还有更好的方案，请老师协助解答，谢谢！